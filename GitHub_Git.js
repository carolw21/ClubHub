/*
 * JS for GitHub_Git generated by Appery.io
 */

Apperyio.getProjectGUID = function() {
    return '96bf557e-32e1-4d20-ac3a-5655fb026817';
};

function navigateTo(outcome, useAjax) {
    Apperyio.navigateTo(outcome, useAjax);
}

function adjustContentHeight() {
    Apperyio.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Apperyio.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Apperyio.setDetailContent(pageUrl);
}

Apperyio.AppPages = [{
    "name": "Club",
    "location": "Club.html"
}, {
    "name": "GitHub_Img",
    "location": "GitHub_Img.html"
}, {
    "name": "GitHub_File",
    "location": "GitHub_File.html"
}, {
    "name": "ExamplePage1426375367500",
    "location": "ExamplePage1426375367500.html"
}, {
    "name": "GitHub_Gist",
    "location": "GitHub_Gist.html"
}, {
    "name": "me",
    "location": "me.html"
}, {
    "name": "GitHub_Repo",
    "location": "GitHub_Repo.html"
}, {
    "name": "signIn",
    "location": "signIn.html"
}, {
    "name": "Notify",
    "location": "Notify.html"
}, {
    "name": "Calendar",
    "location": "Calendar.html"
}, {
    "name": "signUp",
    "location": "signUp.html"
}, {
    "name": "MaterialDesignPage",
    "location": "MaterialDesignPage.html"
}, {
    "name": "Notifications",
    "location": "Notifications.html"
}, {
    "name": "ExamplePage",
    "location": "ExamplePage.html"
}, {
    "name": "startScreen",
    "location": "startScreen.html"
}, {
    "name": "GitHub_Git",
    "location": "GitHub_Git.html"
}, {
    "name": "Facebook_Me",
    "location": "Facebook_Me.html"
}, {
    "name": "GitHub_Search",
    "location": "GitHub_Search.html"
}, {
    "name": "Facebook_Login",
    "location": "Facebook_Login.html"
}, {
    "name": "yourEvents",
    "location": "yourEvents.html"
}];

function GitHub_Git_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'userTabs': 'GitHub_Git_userTabs',
        'myReposTab': 'GitHub_Git_myReposTab',
        'myGistsTab': 'GitHub_Git_myGistsTab',
        'myFollowersTab': 'GitHub_Git_myFollowersTab',
        'myFollowingTab': 'GitHub_Git_myFollowingTab',
        'mobilebutton_64': 'GitHub_Git_mobilebutton_64',
        'myRepoResGrid': 'GitHub_Git_myRepoResGrid',
        'mobilegridcell_8': 'GitHub_Git_mobilegridcell_8',
        'mobilelabel1_63': 'GitHub_Git_mobilelabel1_63',
        'repoUserLogin': 'GitHub_Git_repoUserLogin',
        'mobilegridcell_9': 'GitHub_Git_mobilegridcell_9',
        'myRepoName': 'GitHub_Git_myRepoName',
        'myRepoDescr': 'GitHub_Git_myRepoDescr',
        'myRepoRes': 'GitHub_Git_myRepoRes',
        'mobilegridcell_26': 'GitHub_Git_mobilegridcell_26',
        'myRepoLang': 'GitHub_Git_myRepoLang',
        'mobilegridcell_27': 'GitHub_Git_mobilegridcell_27',
        'myRepoWatchers': 'GitHub_Git_myRepoWatchers',
        'mobilegridcell_30': 'GitHub_Git_mobilegridcell_30',
        'myRepoForks': 'GitHub_Git_myRepoForks',
        'myGistsGrid': 'GitHub_Git_myGistsGrid',
        'mobilegridcell_36': 'GitHub_Git_mobilegridcell_36',
        'myGistAva': 'GitHub_Git_myGistAva',
        'myGistId': 'GitHub_Git_myGistId',
        'mobilegridcell_37': 'GitHub_Git_mobilegridcell_37',
        'myGistName': 'GitHub_Git_myGistName',
        'myGistsAddInfoGrid': 'GitHub_Git_myGistsAddInfoGrid',
        'mobilegridcell_61': 'GitHub_Git_mobilegridcell_61',
        'myGistsLogin': 'GitHub_Git_myGistsLogin',
        'mobilegridcell_62': 'GitHub_Git_mobilegridcell_62',
        'myGistComments': 'GitHub_Git_myGistComments',
        'myGistsFilesGrid': 'GitHub_Git_myGistsFilesGrid',
        'mobilegridcell_45': 'GitHub_Git_mobilegridcell_45',
        'myGistFile': 'GitHub_Git_myGistFile',
        'mobilegridcell_46': 'GitHub_Git_mobilegridcell_46',
        'myGistLang': 'GitHub_Git_myGistLang',
        'mobilegridcell_49': 'GitHub_Git_mobilegridcell_49',
        'fileSize': 'GitHub_Git_fileSize',
        'myFollowGrid': 'GitHub_Git_myFollowGrid',
        'mobilegridcell_54': 'GitHub_Git_mobilegridcell_54',
        'followersAva': 'GitHub_Git_followersAva',
        'mobilegridcell_55': 'GitHub_Git_mobilegridcell_55',
        'followersLogin': 'GitHub_Git_followersLogin',
        'messageLabel': 'GitHub_Git_messageLabel'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.mappings["GitHub_Git_getUserRepoServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserRepoServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user']"

            }

            ]
        },

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserRepoServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserRepoServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getUserRepoServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Git",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][0]['name']",
                "target": "$['myRepoName:text']"

            },

            {

                "source": "$['body'][0]['language']",
                "target": "$['myRepoLang:text']"

            },

            {

                "source": "$['body'][0]['description']",
                "target": "$['myRepoDescr:text']"

            },

            {

                "source": "$['body'][0]['watchers_count']",
                "target_transformation": function(value, element) {
                    return "Watchers: " + value;
                },
                "target": "$['myRepoWatchers:text']"

            },

            {

                "source": "$['body'][0]['owner']['login']",
                "target": "$['repoUserLogin:text']"

            },

            {

                "source": "$['body'][0]['forks_count']",
                "target_transformation": function(value, element) {
                    return "Forks: " + value;
                },
                "target": "$['myRepoForks:text']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserGistServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserGistServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        },

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserGistServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserGistServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getUserGistServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Git",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][0]['id']",
                "target": "$['myGistId:text']"

            },

            {

                "source": "$['body'][0]['user']['login']",
                "target": "$['myGistsLogin:text']"

            },

            {

                "source": "$['body'][0]['description']",
                "target": "$['myGistName:text']"

            },

            {

                "source": "$['body'][0]['comments']",
                "target_transformation": function(value, element) {
                    return "Comments: " + value
                },
                "target": "$['myGistComments:text']"

            },

            {

                "source": "$['body'][0]['user']['avatar_url']",
                "target": "$['myGistAva:image']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserFollowersServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserFollowersServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user']"

            }

            ]
        },

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserFollowersServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserFollowersServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getUserFollowersServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Git",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][0]['avatar_url']",
                "target": "$['followersAva:image']"

            },

            {

                "source": "$['body'][0]['login']",
                "target": "$['followersLogin:text']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserFollowingServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserFollowingServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user']"

            }

            ]
        },

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getUserFollowingServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getUserFollowingServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getUserFollowingServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Git",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][0]['login']",
                "target": "$['followersLogin:text']"

            },

            {

                "source": "$['body'][0]['avatar_url']",
                "target": "$['followersAva:image']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getCurrentUserServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "access_token",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getCurrentUserServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['access_token']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Git_getCurrentUserServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Git",
        "directions": [

        {
            "from_name": "getCurrentUserServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "currentUserLogin",
            "to_type": "LOCAL_STORAGE",

            "mappings": [

            {

                "source": "$['body']['login']",
                "target": "$"

            }

            ]
        }

        ]
    };

    Apperyio.datasources = Apperyio.datasources || {};

    window.getUserRepoServ = Apperyio.datasources.getUserRepoServ = new Apperyio.DataSource(GitHub_getUserRepos, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserRepoServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("GitHub_Git");
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserRepoServ_onsuccess_mapping_0"]);
            if (data.length === 0) {
                Appery("messageLabel").show();
                Appery("myRepoResGrid").parent().hide();
                Appery("messageLabel").text("The user doesn't have any repos");
            } else {
                Appery("myRepoResGrid").parent().show();
                Appery("messageLabel").hide();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getUserGistServ = Apperyio.datasources.getUserGistServ = new Apperyio.DataSource(GitHub_getUserGists, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserGistServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("GitHub_Git");
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserGistServ_onsuccess_mapping_0"]);
            if (data.length === 0) {
                Appery("messageLabel").show();
                Appery("myGistsGrid").parent().hide();
                Appery("messageLabel").text("The user doesn't have any gists");
            } else {
                Appery("messageLabel").hide();
                Appery("myGistsGrid").parent().show();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getUserFollowersServ = Apperyio.datasources.getUserFollowersServ = new Apperyio.DataSource(GitHub_getUserFollowers, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserFollowersServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("GitHub_Git");
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserFollowersServ_onsuccess_mapping_0"]);
            if (data.length === 0) {
                Appery("messageLabel").show();
                Appery("myFollowGrid").parent().hide();
                Appery("messageLabel").text("The user doesn't have any followers");
            } else {
                Appery("messageLabel").hide();
                Appery("myFollowGrid").parent().show();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getUserFollowingServ = Apperyio.datasources.getUserFollowingServ = new Apperyio.DataSource(GitHub_getUserFollowing, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserFollowingServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("GitHub_Git");
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getUserFollowingServ_onsuccess_mapping_0"]);
            if (data.length === 0) {
                Appery("messageLabel").show();
                Appery("myFollowGrid").parent().hide();
                Appery("messageLabel").text("The user doesn't follow anybody");
            } else {
                Appery("messageLabel").hide();
                Appery("myFollowGrid").parent().show();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getCurrentUserServ = Apperyio.datasources.getCurrentUserServ = new Apperyio.DataSource(GitHub_getCurrentUser, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getCurrentUserServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("GitHub_Git");
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Git_getCurrentUserServ_onsuccess_mapping_0"]);
            Helpers.updateHeader(data.login);
            toggle('GitHub_Git_myRepoResGrid', 'mob', 'true');
            try {
                getUserRepoServ.execute({});
            } catch (e) {
                console.error(e);
                hideSpinner();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    Apperyio.CurrentScreen = 'GitHub_Git';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var GitHub_Git_onLoad = function() {
            GitHub_Git_elementsExtraJS();

            Helpers.initNavBar();

            GitHub_Git_deviceEvents();
            GitHub_Git_windowEvents();
            GitHub_Git_elementsEvents();
        };

    // screen window events


    function GitHub_Git_windowEvents() {

        $('#GitHub_Git').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#GitHub_Git').on({
            pageshow: function(event) {
                try {
                    getCurrentUserServ.execute({});
                } catch (e) {
                    console.error(e);
                    hideSpinner();
                };
            },
        });

    };

    // device events


    function GitHub_Git_deviceEvents() {
        document.addEventListener("deviceready", function() {

            $(document).bind("resume", function() {
                PushNotification.getPendingNotifications(function(status) {
                    var notifications = status.notifications;
                    for (var i = 0; i < notifications.length; ++i) {
                        PushNotification.notificationCallback(notifications[i]);
                    }
                });
            });

        });
    };

    // screen elements extra js


    function GitHub_Git_elementsExtraJS() {
        // screen (GitHub_Git) extra code

    };

    // screen elements handler


    function GitHub_Git_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

        $(document).off("click", '#GitHub_Git_userHeader [name="myReposTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".myGrid").hide();
                    toggle('GitHub_Git_myRepoResGrid', 'mob', 'true');
                    try {
                        getUserRepoServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Git_userHeader [name="myReposTab"]');
        $(document).off("click", '#GitHub_Git_userHeader [name="myGistsTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".myGrid").hide();
                    toggle('GitHub_Git_myGistsGrid', 'mob', 'true');
                    try {
                        getUserGistServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Git_userHeader [name="myGistsTab"]');
        $(document).off("click", '#GitHub_Git_userHeader [name="myFollowersTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".myGrid").hide();
                    toggle('GitHub_Git_myFollowGrid', 'mob', 'true');
                    try {
                        getUserFollowersServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Git_userHeader [name="myFollowersTab"]');
        $(document).off("click", '#GitHub_Git_userHeader [name="myFollowingTab"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    $(".myGrid").hide();
                    toggle('GitHub_Git_myFollowGrid', 'mob', 'true');
                    try {
                        getUserFollowingServ.execute({});
                    } catch (e) {
                        console.error(e);
                        hideSpinner();
                    };

                }
            },
        }, '#GitHub_Git_userHeader [name="myFollowingTab"]');
        $(document).off("click", '#GitHub_Git_userHeader [name="mobilebutton_64"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    history.back();

                }
            },
        }, '#GitHub_Git_userHeader [name="mobilebutton_64"]');

        $(document).off("vclick", '#GitHub_Git_mobilecontainer1 [name="myRepoResGrid"]').on({
            vclick: function(event) {
                try {
                    $a.storage["currentRepo"].update("$", $a.c15r($a.UIHandler.resolveGeneratedComponent('myRepoName', this), 'get', 'text'))
                } catch (e) {
                    console.error(e)
                };
                try {
                    $a.storage["currentUserLogin"].update("$", $a.c15r($a.UIHandler.resolveGeneratedComponent('repoUserLogin', this), 'get', 'text'))
                } catch (e) {
                    console.error(e)
                };
                Helpers.folderStack.length = 0;
            },
        }, '#GitHub_Git_mobilecontainer1 [name="myRepoResGrid"]');

        $(document).off("vclick", '#GitHub_Git_mobilecontainer1 [name="myGistsGrid"]').on({
            vclick: function(event) {
                try {
                    $a.storage["currentGistId"].update("$", $a.c15r($a.UIHandler.resolveGeneratedComponent('myGistId', this), 'get', 'text'))
                } catch (e) {
                    console.error(e)
                };
            },
        }, '#GitHub_Git_mobilecontainer1 [name="myGistsGrid"]');

        $(document).off("vclick", '#GitHub_Git_mobilecontainer1 [name="myFollowGrid"]').on({
            vclick: function(event) {
                try {
                    $a.storage["currentUserLogin"].update("$", $a.c15r($a.UIHandler.resolveGeneratedComponent('followersLogin', this), 'get', 'text'))
                } catch (e) {
                    console.error(e)
                };
                Appery("welcomeTabs").find("a").removeClass('ui-btn-active');
                Appery("myReposTab").addClass('ui-btn-active');
                Helpers.updateHeader($(this).find("[name=followersLogin]").text());
                $(".myGrid").hide();
                toggle('GitHub_Git_myRepoResGrid', 'mob', 'true');
                try {
                    getUserRepoServ.execute({});
                } catch (e) {
                    console.error(e);
                    hideSpinner();
                };
            },
        }, '#GitHub_Git_mobilecontainer1 [name="myFollowGrid"]');

    };

    $(document).off("pagebeforeshow", "#GitHub_Git").on("pagebeforeshow", "#GitHub_Git", function(event, ui) {
        Apperyio.CurrentScreen = "GitHub_Git";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    GitHub_Git_onLoad();
};

$(document).off("pagecreate", "#GitHub_Git").on("pagecreate", "#GitHub_Git", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    GitHub_Git_js();
});