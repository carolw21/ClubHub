/*
 * JS for GitHub_Repo generated by Appery.io
 */

Apperyio.getProjectGUID = function() {
    return '96bf557e-32e1-4d20-ac3a-5655fb026817';
};

function navigateTo(outcome, useAjax) {
    Apperyio.navigateTo(outcome, useAjax);
}

function adjustContentHeight() {
    Apperyio.adjustContentHeightWithPadding();
}

function adjustContentHeightWithPadding(_page) {
    Apperyio.adjustContentHeightWithPadding(_page);
}

function setDetailContent(pageUrl) {
    Apperyio.setDetailContent(pageUrl);
}

Apperyio.AppPages = [{
    "name": "Club",
    "location": "Club.html"
}, {
    "name": "GitHub_Img",
    "location": "GitHub_Img.html"
}, {
    "name": "GitHub_File",
    "location": "GitHub_File.html"
}, {
    "name": "ExamplePage1426375367500",
    "location": "ExamplePage1426375367500.html"
}, {
    "name": "GitHub_Gist",
    "location": "GitHub_Gist.html"
}, {
    "name": "me",
    "location": "me.html"
}, {
    "name": "GitHub_Repo",
    "location": "GitHub_Repo.html"
}, {
    "name": "signIn",
    "location": "signIn.html"
}, {
    "name": "Notify",
    "location": "Notify.html"
}, {
    "name": "Calendar",
    "location": "Calendar.html"
}, {
    "name": "signUp",
    "location": "signUp.html"
}, {
    "name": "MaterialDesignPage",
    "location": "MaterialDesignPage.html"
}, {
    "name": "Notifications",
    "location": "Notifications.html"
}, {
    "name": "ExamplePage",
    "location": "ExamplePage.html"
}, {
    "name": "startScreen",
    "location": "startScreen.html"
}, {
    "name": "GitHub_Git",
    "location": "GitHub_Git.html"
}, {
    "name": "Facebook_Me",
    "location": "Facebook_Me.html"
}, {
    "name": "GitHub_Search",
    "location": "GitHub_Search.html"
}, {
    "name": "Facebook_Login",
    "location": "Facebook_Login.html"
}, {
    "name": "yourEvents",
    "location": "yourEvents.html"
}];

function GitHub_Repo_js() {

    /* Object & array with components "name-to-id" mapping */
    var n2id_buf = {
        'repoName': 'GitHub_Repo_repoName',
        'upToPrevTree': 'GitHub_Repo_upToPrevTree',
        'mobilegridcell_27': 'GitHub_Repo_mobilegridcell_27',
        'mobilelabel1_33': 'GitHub_Repo_mobilelabel1_33',
        'mobilegridcell_31': 'GitHub_Repo_mobilegridcell_31',
        'mobilelabel1_34': 'GitHub_Repo_mobilelabel1_34',
        'repoTreeGrid': 'GitHub_Repo_repoTreeGrid',
        'mobilegridcell_20': 'GitHub_Repo_mobilegridcell_20',
        'treeType': 'GitHub_Repo_treeType',
        'mobilegridcell_21': 'GitHub_Repo_mobilegridcell_21',
        'pathLabel': 'GitHub_Repo_pathLabel',
        'mobilegridcell_24': 'GitHub_Repo_mobilegridcell_24',
        'mobilegridcell_22': 'GitHub_Repo_mobilegridcell_22',
        'mobilegridcell_23': 'GitHub_Repo_mobilegridcell_23',
        'shaLabel': 'GitHub_Repo_shaLabel',
        'mobilegridcell_25': 'GitHub_Repo_mobilegridcell_25'
    };

    if ("n2id" in window && window.n2id !== undefined) {
        $.extend(n2id, n2id_buf);
    } else {
        window.n2id = n2id_buf;
    }

    /*
     * Nonvisual components
     */

    Apperyio.mappings = Apperyio.mappings || {};

    Apperyio.mappings["GitHub_Repo_getCommitsServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Repo",
        "directions": [

        {
            "from_name": "currentRepo",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getCommitsServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['repo_id']"

            }

            ]
        },

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getCommitsServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user_login']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Repo_getCommitsServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Repo",
        "directions": [

        {
            "from_name": "getCommitsServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Repo",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body'][i]['sha']",
                "target": "$['repoTreeGrid']['shaLabel:text']"

            },

            {

                "source": "$['body'][i]['url']",
                "target": "$['repoTreeGrid']['pathLabel:text']"

            },

            {

                "source": "$['body'][i]",
                "target": "$['repoTreeGrid']"

            }

            ]
        },

        {
            "from_name": "getCommitsServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "currentSHA",
            "to_type": "LOCAL_STORAGE",

            "mappings": [

            {

                "source": "$['body'][0]['sha']",
                "target": "$"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Repo_getRepoTreeServ_onbeforesend_mapping_0"] = {
        "homeScreen": "GitHub_Repo",
        "directions": [

        {
            "from_name": "currentRepo",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getRepoTreeServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['repo_id']"

            }

            ]
        },

        {
            "from_name": "currentUserLogin",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getRepoTreeServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['user_login']"

            }

            ]
        },

        {
            "from_name": "currentSHA",
            "from_type": "LOCAL_STORAGE",

            "to_name": "getRepoTreeServ",
            "to_type": "SERVICE_REQUEST",

            "to_default": {
                "headers": {},
                "parameters": {},
                "body": null
            },

            "mappings": [

            {

                "source": "$",
                "target": "$['parameters']['sha']"

            }

            ]
        }

        ]
    };

    Apperyio.mappings["GitHub_Repo_getRepoTreeServ_onsuccess_mapping_0"] = {
        "homeScreen": "GitHub_Repo",
        "directions": [

        {
            "from_name": "getRepoTreeServ",
            "from_type": "SERVICE_RESPONSE",

            "to_name": "GitHub_Repo",
            "to_type": "UI",

            "mappings": [

            {

                "source": "$['body']['tree'][i]['type']",
                "target_transformation": function(value, element) {
                    switch (value) {
                    case "blob":
                        return "";
                        break;
                    case "tree":
                        return "";
                        break;
                    default:
                        return "";
                    }
                },
                "target": "$['repoTreeGrid']['treeType:text']"

            },

            {

                "source": "$['body']['tree'][i]['path']",
                "target": "$['repoTreeGrid']['pathLabel:text']"

            },

            {

                "source": "$['body']['tree'][i]",
                "target_transformation": function(value, element) {
                    element.attr("type", value.type);
                    if (value.type == "tree") {
                        var tables = $("table[type=tree]");
                        if (tables.length == 1) {
                            element.prependTo(element.parent());
                        } else {
                            element.insertAfter(tables[tables.length - 2]);
                        }
                    }
                },
                "target": "$['repoTreeGrid']"

            },

            {

                "source": "$['body']['tree'][i]['sha']",
                "target": "$['repoTreeGrid']['shaLabel:text']"

            }

            ]
        }

        ]
    };

    Apperyio.datasources = Apperyio.datasources || {};

    window.getCommitsServ = Apperyio.datasources.getCommitsServ = new Apperyio.DataSource(GitHub_getCommits, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Repo_getCommitsServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("GitHub_Repo");
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Repo_getCommitsServ_onsuccess_mapping_0"]);
            try {
                getRepoTreeServ.execute({});
            } catch (e) {
                console.error(e);
                hideSpinner();
            };
            Helpers.folderStack.length = 0;
            Helpers.folderStack.push(data[0].sha);
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    window.getRepoTreeServ = Apperyio.datasources.getRepoTreeServ = new Apperyio.DataSource(GitHub_getRepoTree, {
        "onBeforeSend": function(jqXHR) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Repo_getRepoTreeServ_onbeforesend_mapping_0"]);
        },
        "onComplete": function(jqXHR, textStatus) {

            Apperyio.refreshScreenFormElements("GitHub_Repo");
        },
        "onSuccess": function(data) {
            Apperyio.processMappingAction(Apperyio.mappings["GitHub_Repo_getRepoTreeServ_onsuccess_mapping_0"]);
            if (Helpers.folderStack.length == 1) {
                Appery("upToPrevTree").hide();
            } else {
                Appery("upToPrevTree").show();
            };
        },
        "onError": function(jqXHR, textStatus, errorThrown) {}
    });

    Apperyio.CurrentScreen = 'GitHub_Repo';
    _.chain(Apperyio.mappings).filter(function(m) {
        return m.homeScreen === Apperyio.CurrentScreen;
    }).each(Apperyio.UIHandler.hideTemplateComponents);

    /*
     * Events and handlers
     */

    // On Load
    var GitHub_Repo_onLoad = function() {
            GitHub_Repo_elementsExtraJS();

            GitHub_Repo_deviceEvents();
            GitHub_Repo_windowEvents();
            GitHub_Repo_elementsEvents();
        };

    // screen window events


    function GitHub_Repo_windowEvents() {

        $('#GitHub_Repo').bind('pageshow orientationchange', function() {
            var _page = this;
            adjustContentHeightWithPadding(_page);
        });
        $('#GitHub_Repo').on({
            pageshow: function(event) {
                if (Helpers.folderStack.length === 0) {
                    getCommitsServ.execute({});
                };
            },
        });

    };

    // device events


    function GitHub_Repo_deviceEvents() {
        document.addEventListener("deviceready", function() {

            $(document).bind("resume", function() {
                PushNotification.getPendingNotifications(function(status) {
                    var notifications = status.notifications;
                    for (var i = 0; i < notifications.length; ++i) {
                        PushNotification.notificationCallback(notifications[i]);
                    }
                });
            });

        });
    };

    // screen elements extra js


    function GitHub_Repo_elementsExtraJS() {
        // screen (GitHub_Repo) extra code

    };

    // screen elements handler


    function GitHub_Repo_elementsEvents() {
        $(document).on("click", "a :input,a a,a fieldset label", function(event) {
            event.stopPropagation();
        });

        $(document).off("click", '#GitHub_Repo_mobilecontainer1 [name="upToPrevTree"]').on({
            click: function(event) {
                if (!$(this).attr('disabled')) {
                    Helpers.toUpperFolder();

                }
            },
        }, '#GitHub_Repo_mobilecontainer1 [name="upToPrevTree"]');

        $(document).off("vclick", '#GitHub_Repo_mobilecontainer1 [name="repoTreeGrid"]').on({
            vclick: function(event) {
                Helpers.openRepoItem(this);
            },
        }, '#GitHub_Repo_mobilecontainer1 [name="repoTreeGrid"]');

    };

    $(document).off("pagebeforeshow", "#GitHub_Repo").on("pagebeforeshow", "#GitHub_Repo", function(event, ui) {
        Apperyio.CurrentScreen = "GitHub_Repo";
        _.chain(Apperyio.mappings).filter(function(m) {
            return m.homeScreen === Apperyio.CurrentScreen;
        }).each(Apperyio.UIHandler.hideTemplateComponents);
    });

    GitHub_Repo_onLoad();
};

$(document).off("pagecreate", "#GitHub_Repo").on("pagecreate", "#GitHub_Repo", function(event, ui) {
    Apperyio.processSelectMenu($(this));
    GitHub_Repo_js();
});